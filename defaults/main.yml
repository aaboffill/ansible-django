---
# Name used as a default value in most variables below
django_name: django
# Whether the project is in python 3
django_ispython3: yes
# Root path of the django project
django_path: "/opt/{{ django_name }}"
# Domain name under which the project is served. Ends up in ALLOWED_HOSTS.
django_domain_name: "{{ django_name }}.vagrant.dev"
# Path of the virtualenv where we install python dependencies
django_env: "{{ django_path }}/env"
# Path where the source of the project is placed.
django_project_path: "{{ django_path }}/project"
# Path, inside the project's source, where "manage.py" lives.
django_src_path: "{{ django_project_path }}/src"
# python executable name. re-used in other variables below
django_python2exec: python2.7
django_python3exec: python3.4
django_pythonexec: "{{ django_ispython3 | ternary(django_python3exec, django_python2exec) }}"
# Path for the site-packages folder inside the virtualenv (you normally don't have to change this
# unless it's the wrong path). This is where we go place the "local_settings.py" file.
django_sitepackages_path: "{{ django_env }}/lib/{{ django_pythonexec }}/site-packages"
# Path for STATIC_ROOT
django_static_path: "{{ django_path }}/static"
# Path for MEDIA_ROOT
django_media_path: "{{ django_path }}/media"
# Path to a requirements file. This is what will be installed inside our virtualenv.
django_requirements_file: "{{ django_project_path }}/requirements.txt"
# URL to git repo of the project. if django_project_symlink_dest isn't set, this repo will be
# cloned in django_project_path.
django_project_repo_url: ""
django_project_repo_version: master
# If set, we place a symlink at django_project_path pointing to this path. Usually used in
# Vagrant environment, allowing us to do live reloads upon file edits.
django_project_symlink_dest: ""
# Owner of django_path. Most commands in this role are ran under this user.
# Will be created if it doesn't exist.
django_user: "{{ django_name }}"
# Type of database to install. Choices: postgres, mariadb
django_dbtype: postgres
# User to use for db connection.
django_dbuser: "{{ django_user }}"
# DB name to use.
django_dbname: "{{ django_name }}"
# password to use for db connection.
django_dbpass: whatever
# Value of the ENGINE param in Django settings' DATABASES dictionary.
django_dbengine_name: "django.db.backends.{{ (django_dbtype == 'postgres') | ternary('postgresql_psycopg2', 'mysql') }}"
# Whether we run django in debug mode.
django_debug: no
# Ends up in SECRET_KEY setting.
django_secret_key: whatever
# Ends up in "processes" uwsgi config
django_uwsgi_process_count: 5
# Fixtures to load in django after deployment. list of paths relative to manage.py
django_fixtures_to_load: []

# If set, we will try, before installing Django, to provide initial data for it, that is, a DB
# and media files. We will do so through django_initial_data_restore_script.
django_provide_initial_data: no

# Path of the script to call to restore our DB and media files. It's expected to import SQL dumps
# from backup into our django_dbname and to restore media files into django_media_path.
django_initial_data_restore_script: "{{ django_path }}/restore.sh"
